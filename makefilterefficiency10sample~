# Makefile for the ROOT test programs.  # This Makefile shows nicely how to compile and link applications
# using the ROOT libraries on all supported platforms.
#
# Copyright (c) 2000 Rene Brun and Fons Rademakers
#
# Author: Fons Rademakers, 29/2/2000

include Makefile1.arch

#------------------------------------------------------------------------------
#brings in the few minossoft things i need
#BOOSTFLAGS = -I boost_1_48_0

ifdef ANITA_UTIL_INSTALL_DIR
	ANITA_UTIL_LIB_DIR=${ANITA_UTIL_INSTALL_DIR}/lib
	ANITA_UTIL_INC_DIR=${ANITA_UTIL_INSTALL_DIR}/include
	CXXFLAGS += -DANITA_UTIL_EXISTS
	LD_ANITA_UTIL=-L${ANITA_UTIL_LIB_DIR}
	INC_ANITA_UTIL=-I${ANITA_UTIL_INC_DIR}
	ANITA_DATA_HEADERS = $(ANITA_UTIL_INC_DIR)/RawAnitaEvent.h $(ANITA_UTIL_INC_DIR)/UsefulAnitaEvent.h $(ANITA_UTIL_INC_DIR)/RawAnitaHeader.h $(ANITA_UTIL_INC_DIR)/AnitaConventions.h $(ANITA_UTIL_INC_DIR)/AnitaGeomTool.h $(ANITA_UTIL_INC_DIR)/AnitaPacketUtil.h $(ANITA_UTIL_INC_DIR)/simpleStructs.h
endif



CXXFLAGS += -g -O2 $(INC_ANITA_UTIL) $(BOOSTFLAGS)

OPTFLAGS  = -O2
DBGFLAGS  = -pipe -Wall -W -Woverloaded-virtual -g -ggdb -O0 -fno-inline

DBGCXXFLAGS = $(DBGFLAGS) $(ROOTCFLAGS) $(BOOSTFLAGS)

LDFLAGS      += -g $(LD_ANITA_UTIL) -lAnitaEvent -I$(BOOST_ROOT) $(ROOTLDFLAGS) -Llib -L. 


LIBS += 

HEADERS	  = analysis_info_4pol.h
##ANITA_DATA_HEADERS = include/RawAnitaEvent.h include/UsefulAnitaEvent.h include/RawAnitaHeader.h include/AnitaConventions.h include/AnitaGeomTool.h include/AnitaPacketUtil.h include/simpleStructs.h
ICEMCO    = filter_efficiency_pulser.o classdict.o
ICEMCS    = filter_efficiency_pulser.cc 
ICEMC     = filter_efficiency_pulser$(ExeSuf)

OBJS          = $(CONDTRKO) $(ICEMCO) 

PROGRAMS      = $(ICEMC)


#------------------------------------------------------------------------------

.SUFFIXES: .$(SrcSuf) .$(ObjSuf) .$(DllSuf)

##ANITADATALIB = libAnitaEvent.$(DllSuf)

##$(ANITADATALIB):
	@cd anita_data_format; make all; make install

all:            $(PROGRAMS)

$(ICEMC):       $(ICEMCO)
		$(LD) $(LDFLAGS) $(ICEMCO) $(LIBS) $(OutPutOpt) $(ICEMC)
		@echo "$@ done"

.PHONY: clean
clean:
		@rm -f $(OBJS) core
##@cd anita_data_format; make clean

distclean:      clean
		@rm -f $(PROGRAMS) $(ICEMCSO) $(ICEMCLIB) *Dict.* *.def *.exp \
		   *.ps *.so *.lib *.dll *.d *.log .def so_locations
		@rm -rf cxx_repository core*

.PHONY: debug
debug: CXXFLAGS = $(DBGCXXFLAGS)
debug: LDFLAGS = -O0 -g -ggdb
debug: 		$(ICEMC)
		@echo "Compile in $@ mode done"


.PHONY: run
run:
	  ./$(ICEMC)


	
.SUFFIXES: .$(SrcSuf)

###

icemc.$(ObjSuf): 

classdict.C:	$(HEADERS)
	@echo "Generating dictionaryâ€¦"
	@rm -f classdict*
	rootcint classdict.C -c $(HEADERS) LinkDef_plots.h

.$(SrcSuf).$(ObjSuf):
	$(CXX) $(CXXFLAGS) -c $<
